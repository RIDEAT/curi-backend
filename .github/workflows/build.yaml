
name: CI Pipeline

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17
          cache: 'gradle'

      - name: Setup key
        id: setup-key
        env:
          PRIVATE_KEY: ${{ secrets.CLOUD_FRONT_PRIVATE_KEY }}
        run: |
          touch ./src/main/resources/key.pem
          echo "$PRIVATE_KEY" >> "./src/main/resources/key.pem"
          chmod 400 "./src/main/resources/key.pem"

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get image tag(verion)
        id: image
        run: |
          VERSION=$(echo ${{ github.sha }} | cut -c1-8)
          echo VERSION=$VERSION
          echo "::set-output name=version::$VERSION"

      - name: Build With Jib, and push image to Amazon ECR with tag
        id: image-info
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: spring/curi-app
          IMAGE_TAG: ${{ steps.image.outputs.version }}
          RDS_URL: ${{ secrets.RDS_URL }}
          RDS_USERNAME: ${{ secrets.RDS_USERNAME }}
          RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}
          MONGO_URL: ${{ secrets.MONGO_URL }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SQS_QUEUE_NAME: ${{ secrets.AWS_SQS_QUEUE_NAME }}
          AWS_SQS_QUEUE_URL: ${{ secrets.AWS_SQS_QUEUE_URL }}
          AWS_REGION: ap-northeast-2
          DDL_AUTO: update
          AWS_S3_BUCKET: temp
          AWS_CLOUDFRONT_URL: temp
          AWS_CLOUDFRONT_KEYPAIR: temp
          SLACK_CLIENT_ID: temp
          SLACK_CLIENT_SECRET: temp
          SLACK_REDIRECT_URL: temp
          SLACK_BOT_TOKEN: temp
          ENVIRONMENT: build
          TEST_ENVIRONMENT: data-build
        run: |
          echo "::set-output name=ecr_repository::$ECR_REPOSITORY"
          echo "::set-output name=image_tag::$IMAGE_TAG"
          echo "ENVIRONMENT=build" >> $GITHUB_ENV
          echo $ENVIRONMENT
          ./gradlew -Djib.to.image=$ECR_REGISTRY/$ECR_REPOSITORY -PinputTag=$IMAGE_TAG clean jib test --no-daemon

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: build/test-results/**/*.xml

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Checkout kustomize repository
        uses: actions/checkout@v2
        with:
          repository: RIDEAT/curi-manifests
          ref: main
          token: ${{ secrets.ACTION_TOKEN }}
          path: curi-manifests

      - name: Update Kubernetes resources
        run: |
          echo ${{ steps.login-ecr.outputs.registry }}
          echo ${{ steps.image-info.outputs.ecr_repository }}
          echo ${{ steps.image-info.outputs.image_tag }}
          cd curi-manifests/k8s_manifests/spring/overlays/dev
          kustomize edit set image ${{ steps.login-ecr.outputs.registry}}/${{ steps.image-info.outputs.ecr_repository }}=${{ steps.login-ecr.outputs.registry}}/${{ steps.image-info.outputs.ecr_repository }}:${{ steps.image-info.outputs.image_tag }}
          cat kustomization.yaml

      - name: Commit files
        run: |
          cd curi-manifests
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          git commit -am "Update image tag"
          git push -u origin main