plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.14-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'jacoco'
	id 'com.google.cloud.tools.jib' version '3.3.2'
}

group = 'com.backend'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

ext {
	set('springCloudVersion', "2021.0.8")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-batch'

	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.1'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.14.1'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.14.1'
	implementation group: 'com.google.firebase', name: 'firebase-admin', version: '6.9.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.10'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.17.1'
	implementation 'com.amazonaws:aws-java-sdk-ses:1.12.408'
	implementation 'com.amazonaws:aws-java-sdk-sqs:1.12.408'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.408'
	implementation 'com.amazonaws:aws-java-sdk-cloudfront:1.12.408'
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-aws-messaging', version: '2.2.1.RELEASE'
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws', version: '2.2.6.RELEASE'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'commons-io:commons-io:2.11.0'
	implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'junit:junit:4.13.1'
	testImplementation 'io.rest-assured:rest-assured:4.4.0'
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.11.2'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testRuntimeOnly 'com.h2database:h2'

	runtimeOnly 'com.mysql:mysql-connector-j'


	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'

	//thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'



	//testImplementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.5'
	//implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'

	implementation "com.slack.api:slack-api-client:1.30.0"
	implementation 'org.json:json:20211205'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacoco {
	toolVersion = "0.8.9"
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}


def inputTag = project.hasProperty('inputTag') ? project.property('inputTag') : '10f48204'

jib {
	from {
		image = "openjdk:17-alpine"
	}
	to {
		image = "your-respository"
		tags = ["latest", inputTag]
		credHelper = 'ecr-login'
	}
	container {
		creationTime = "USE_CURRENT_TIMESTAMP"
		jvmFlags = ['-XX:+UseContainerSupport', '-Dserver.port=8080', '-Dfile.encoding=UTF-8']
		ports = ['8080']
	}
}
configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}